@import "../sass/functions";
@import "../sass/mixins";
@import "../sass/variables";

$btnAddEventDiameter: 70px;
$navHeight: 10vh;
$modalEventsBtn: (
  "Poo": #e74c3c,
  "Pee": #f1c40f,
  "Activity": #2ecc71,
  "Drink": #3498db
);

.navBar {
  //Style the Menu of the Navbar
  .bottomNavBar {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    grid-template-areas: "history events info" "history events info";

    position: fixed;
    font-size: 30 / 100 * $navHeight;
    bottom: 0;
    height: $navHeight;
    width: 100vw;
    background-color: $secondary-dark;
    z-index: 1;
    .activeLink {
      color: $primary-dark;
    }
    a {
      text-decoration: none;
      color: $text-color-light;
      font-weight: 600;
    }
    .history {
      grid-area: history;
      align-self: center;
      justify-self: start;
      width: 100%;
    }
    .events {
      grid-area: events;
      position: relative;
      bottom: 30px;
      display: flex;
      justify-self: center;
      height: $btnAddEventDiameter;
      width: $btnAddEventDiameter;
      border: 5px solid white;
      border-radius: 50%;
      cursor: pointer;
      z-index: 99;
      @include button-bg($primary-dark);
      .cross {
        margin: auto;
        overflow: hidden;
        fill: $secondary-dark;
      }
      &:hover .cross {
        fill: white;
      }
    }
    .about {
      grid-area: info;
      justify-self: end;
      align-self: center;
      width: 100%;
    }
  }

  //Style and Show (or not) the event menu
  .modal {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    grid-template-areas: "Poo Pee" "Activity Drink";

    position: absolute;
    bottom: $navHeight;
    height: 100 - $navHeight;
    width: 100vw;
    overflow: hidden;
    background-color: $primary-light;
    will-change: transform, opacity;

    %btn {
      display: flex;
      @include box(40vmin);
      border: 7px solid rgba(255, 255, 255, 0.61);
      border-radius: 50%;
      justify-self: center;
      align-self: center;

      color: white;
      text-decoration: none;
      font-weight: 800;
      font-size: 4vmin;
      letter-spacing: 1px;
      text-transform: uppercase;
      justify-content: center;
      align-items: center;

      @include shadowEffect;
    }

    // It's like a map... we don't have to write the same code for our 4 buttons
    @each $event, $bgColor in $modalEventsBtn {
      .btn-#{$event} {
        @extend %btn;
        @include button-bg($bgColor);
        grid-area: $event;
      }
    }
  }
  .modalHidden {
    .modal {
      opacity: 0;
      transition: opacity 0.5s ease 0.5s;
      pointer-events: none;

      %btn {
        animation: scale-out-center 0.5s cubic-bezier(0.55, 0.085, 0.68, 0.53)
          both;
      }
    }
  }
  .modalVisible {
    .modal {
      opacity: 1;
      pointer-events: auto;
      %btn {
        animation: scale-in-center 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94)
          both;
      }
    }
  }
}
// animation scale-in-center
@include keyframes(scale-in-center) {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}
// animation scale-out-center
@include keyframes(scale-out-center) {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(0);
    opacity: 0;
  }
}
